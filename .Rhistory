)))  |>
mutate ( p2 = 8 - p2r,    p3 = 8 - p3r,   p5 = 8 - p5r,    p6 = 8 - p6r,
p9 = 8 - p9r,   p10 = 8 - p10r,  p11 = 8 - p11r,  p12 = 8 - p12r,
p14 = 8 - p14r, p16 = 8 - p16r,
p18 = 8 - p18r,
p19 = 8 - p19r, p20 = 8 - p20r,  p21 = 8 - p21r,  p22 = 8 - p22r,
p25 = 8 - p25r, p26 = 8 - p26r,  p27 = 8 - p27r,  p28 = 8 - p28r ) |>
mutate (pws = p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 + p10 +
p11 + p12 + p13 + p14 + p15 + p16 + p17 + p18 + p19  + p20 +
p21 + p22 + p23 + p24 + p25 + p26 + p27 + p28,
##
pws.afekt = p1 + p2 + p11 + p14 + p15 + p21,
pws.kompetencje = p3 + p9 + p20 + p23 + p24 + p27,
pws.wartosc = p5 + p7 + p8 + p10 + p12 + p13 + p16 + p19 + p25,
pws.trudnosc = p4 + p6 + p17 + p18 + p22 + p26 + p28,
####
pws.afekt.sr = pws.afekt / 6,
pws.kompetencje.sr = pws.kompetencje / 6,
pws.wartosc.sr = pws.wartosc / 9,
pws.trudnosc.sr = pws.trudnosc / 7
) |>
select (pws, sex=plec, staz, kierunek, pws.afekt, pws.kompetencje, pws.wartosc,
pws.trudnosc, pws.afekt.sr,  pws.kompetencje.sr, pws.wartosc.sr, pws.trudnosc.sr) %>%
mutate( staz=case_when(staz >= 10 ~ "d",  staz >= 3 ~ "s",
TRUE ~ "m") )
mean(d1$pws.afekt.sr)
mean(d1$pws.kompetencje.sr)
mean(d1$pws.wartosc)
mean(d1$pws.wartosc.sr)
mean(d1$pws.trudnosc.sr)
d2 <- d1 |>
group_by(sex) |>
summarise(m = mean(psw), me = median(psw), sd = sd(sd))
d2 <- d1 |>
group_by(sex) |>
summarise(m = mean(pws), me = median(pws), sd = sd(sd))
d2 <- d1 |>
group_by(sex) |>
summarise(m = mean(pws))
d2 <- d1 |>
group_by(sex) |>
summarise(m = mean(pws), me = median(pws), sd = sd(pws))
View(d2)
mean.afekt.K <- d1 |> filter (sex == 'K') |> mean(pws.afekt.sr, na.rm=T)
mean.afekt.K <- d1 |> filter (sex == 'K')
View(mean.afekt.K)
mean.afekt.K <- d1 |> filter (sex == 'K') |> summarise (m = mean(pws.afekt.sr)
mean.afekt.K <- d1 |> filter (sex == 'K') |> summarise (m = mean(pws.afekt.sr))
sex.f <- d1 %>%
select (sex) %>%
group_by(sex)%>%
summarize(n=n())%>%
mutate(prop=n/sum(n) * 100 )
mean.afekt.K <- d1 |> filter (sex == 'K') |> summarise (m = mean(pws.afekt.sr))
View(mean.afekt.K)
mean.afekt.K <- d1 |> group_by (sex) |> summarise (m = mean(pws.afekt.sr))
View(mean.afekt.K)
qqqqq
qqqq
fear.sex.f <- d1 %>%
select (pws, sex) %>%
table()
fear.sex.f <- d1 %>%
select (pws, sex) %>%
table(pws)
fear.sex.f <- d1 %>%
select (pws, sex)
View(fear.sex.f)
d3 <- d1 |> select (pws.afekt.sr = pws.afekt,
pws.kompetencje.sr = pws.kompetencje,
pws.wartosc.sr = pws.wartosc,
pws.trudnosc.sr = pws.trudnosc) |>
pivot_longer(cols = everything() )
View(d3)
d3 <- d1 |> select (pws.afekt.sr = pws.afekt,
pws.kompetencje.sr = pws.kompetencje,
pws.wartosc.sr = pws.wartosc,
pws.trudnosc.sr = pws.trudnosc) |>
pivot_longer(cols = everything(), names_to = aspekt, values_to = v ) |>
ggplot(aes(y=v, x=aspekt, fill=v)) +
geom_boxplot() +
ylab("#") +
ggtitle("") +
xlab('')
d3 <- d1 |> select (pws.afekt.sr = pws.afekt,
pws.kompetencje.sr = pws.kompetencje,
pws.wartosc.sr = pws.wartosc,
pws.trudnosc.sr = pws.trudnosc) |>
pivot_longer(cols = everything(), names_to = aspekt, values_to = v )
d3 <- d1 |> select (pws.afekt.sr = pws.afekt,
pws.kompetencje.sr = pws.kompetencje,
pws.wartosc.sr = pws.wartosc,
pws.trudnosc.sr = pws.trudnosc) |>
pivot_longer(cols = everything(), names_to = 'aspekt', values_to = 'v' ) |>
ggplot(aes(y=v, x=aspekt, fill=v)) +
geom_boxplot() +
ylab("#") +
ggtitle("") +
xlab('')
d3
d3 <- d1 |> select (afekt = pws.afekt.sr,
kompetencje = pws.kompetencje.sr,
wartosc = pws.wartosc.sr,
trudnosc = pws.trudnosc.sr) |>
pivot_longer(cols = everything(), names_to = 'aspekt', values_to = 'v' ) |>
ggplot(aes(y=v, x=aspekt, fill=v)) +
geom_boxplot() +
ylab("#") +
ggtitle("") +
xlab('')
d3
d3 <- d1 |> select (afekt = pws.afekt.sr,
kompetencje = pws.kompetencje.sr,
wartosc = pws.wartosc.sr,
trudnosc = pws.trudnosc.sr) |>
pivot_longer(cols = everything(), names_to = 'aspekt', values_to = 'v' ) |>
ggplot(aes(y=v, x=aspekt )) +
geom_boxplot() +
ylab("#") +
ggtitle("") +
xlab('')
d3
vitC <- read.csv(file='vit_C.csv',sep=';',header=T)
narciarze <- table(vitC)
narciarze.table <- addmargins(narciarze)
kable(narciarze.table, col.names = c('nocold', 'cold', 'razem'), booktabs = TRUE)
## https://practical-stats-med-r.netlify.app/wmw_test
## Practical Statistics in Medicine with R
library("tidyverse")
require('DescTools')
library("rstatix")
library("knitr")
library("ggpubr")
kable(narciarze.table, col.names = c('nocold', 'cold', 'razem'), booktabs = TRUE)
View(narciarze.table)
narciarze.table <- as.data.frame(addmargins(narciarze))
View(narciarze.table)
narciarze.table <- as.data.frame(addmargins(narciarze))
kable(narciarze.table, col.names = c('nocold', 'cold', 'razem'), booktabs = TRUE)
narciarze.table <- addmargins(narciarze)
View(narciarze.table)
narciarze.table[3,3]
narciarze.table <- as.data.frame.matrix(addmargins(narciarze))
View(narciarze.table)
View(narciarze.table)
View(narciarze.table)
rownames(narciarze.table) <- c('C', 'P', 'suma')
kable(narciarze.table, col.names = c('zdrowy', 'katar', 'razem'), booktabs = TRUE)
narciarze.table[3,3]
rownames(narciarze.table) <- c('C', 'P', 'razem')
kable(narciarze.table, col.names = c('zdrowy', 'katar', 'razem'), booktabs = TRUE)
narciarze.p <- proportions(narciarze, margin = 1)
narciarze.p.m <- addmargins(narciarze.p, margin = 1)
Sum <- margin.table(narciarze,2) /narciarze.total
narciarze.total <- sum(narciarze)
narciarze.p <- narciarze/narciarze.total *100
Sum <- margin.table(narciarze,2) /narciarze.total
narciarze.x <- cbind(rbind(narciarze.p, Sum), c(1,1,1)) * 100
kable(digits=2, narciarze.x, col.names = c('nocold', 'cold', 'razem'), booktabs = TRUE)
View(narciarze.x)
vd0 <- read.csv("vitD.csv", sep = ',', dec = ".",  header=T, na.string="NA" ) %>%
select(d=vitamin_D_level, age, gender, osteoporosis) %>%
mutate (genderF = recode(gender,
'1' = 1,
'2' = 0))
## https://practical-stats-med-r.netlify.app/wmw_test
## Practical Statistics in Medicine with R
library("tidyverse")
require('DescTools')
library("rstatix")
library("knitr")
library("ggpubr")
setwd("~/Projekty/BDO/SMIntro/SMI_Bookdown")
vd0 <- read.csv("vitD.csv", sep = ',', dec = ".",  header=T, na.string="NA" ) %>%
select(d=vitamin_D_level, age, gender, osteoporosis) %>%
mutate (genderF = recode(gender,
'1' = 1,
'2' = 0))
sample.size=nrow(vd0)
sample.size
sum(vd0$osteoporosis)
vd0.o <- vd0 |> filter (osteoporosis ==1)
vd0.o <- vd0 |> filter (osteoporosis ==1) |>
group_by(gender) |> summarise(o = sum(osteoporosis))
View(vd0.o)
View(vd0.o)
## Najpierw Model zerowy
glm.0 = glm(osteoporosis ~ NULL, data = vd0, family = "binomial")
## Tylko część wydruku
gml.0.coef <- as.data.frame(coef(summary(glm.0)))
intercept <- gml.0.coef[1,1]
logit <- intercept
prob0 <- exp(logit)/(1+exp(logit))
prob0
prob0 * sample.size
sample.size
vd0 |> group_by(gender) |> summarise(n = n())
sampleK <- 242
sampleM <- 150
prob0 * sampleK
prob0 * sampleM
glm.1 = glm(osteoporosis ~ genderF, data = vd0, family = "binomial")
## oryginalne wartości współczynników
gml.1.coef <- as.data.frame(coef(summary(glm.1)))
## OR
glm.1.or <- round(exp(coef(glm.1)), 2)
glm.1 = glm(osteoporosis ~ genderF, data = vd0, family = "binomial")
## oryginalne wartości współczynników
gml.1.coef <- as.data.frame(coef(summary(glm.1)))
## OR
glm.1.or <- round(exp(coef(glm.1)), 2)
## Kobieta = 1
intercept <- gml.0.coef[1,1]
b1.coeff <- gml.0.coef[1,2]
b1.coeff
intercept
glm.1 = glm(osteoporosis ~ genderF, data = vd0, family = "binomial")
## oryginalne wartości współczynników
gml.1.coef <- as.data.frame(coef(summary(glm.1)))
## OR
glm.1.or <- round(exp(coef(glm.1)), 2)
## Kobieta = 1
intercept <- gml.0.coef[1,1]
b1.coeff <- gml.0.coef[1,2]
intercept
b1.coeff
## Przedziały ufności
glm.1.ci <- round(exp(confint(glm.1)), 2)
##glm_ci_txt <- sprintf ("%.3f %.3f", glm.1.ci[,1], glm.1.ci[,2] )
glm_ci_txt <- sprintf ("%s %s", format(glm.1.ci[,1], decimal.mark=",", digits=3), format(glm.1.ci[,2], decimal.mark=",", digits=3) )
## zestawienie tabelaryczne wyników
gml.1.coef.df <- tibble::rownames_to_column(gml.1.coef, "Parametr") %>%
mutate(or=glm.1.or,  ci=glm_ci_txt)
kable(gml.1.coef.df, row.names = F, digits=3,
col.names = c('Parametr', 'Ocena', 'SE', 'z', 'p', 'OR', 'CI'), booktabs = TRUE )
## Kobieta = 1
intercept <- gml.1.coef[1,1]
b1.coeff <- gml.1.coef[1,2]
intercept
b1.coeff
b1.coeff <- gml.1.coef[2,1]
intercept
b1.coeff
logit <- intercept + b1.coeff
prob0 <- exp(logit)/(1+exp(logit))
prob0K <- exp(logit)/(1+exp(logit))
prob0K
##
logit <- intercept
prob0M <- exp(logit)/(1+exp(logit))
prob0M
prob0K * sampleK  ## 16 było 21
prob0K * sampleK  ## 16 było 21
prob0K * sampleM  ## 9.9 było 5
prob0K * sampleK  ## 16 było 21
prob0M * sampleM  ## 9.9 było 5
vd0 |> group_by(gender) |> summarise(n = n())
sample.by.gender <- vd0 |> group_by(gender) |> summarise(n = n())
View(sample.by.gender)
sample.by.gender <- vd0 |> group_by(genderF) |> summarise(n = n())
View(sample.by.gender)
View(sample.by.gender)
sample.by.gender.K <- vd0 |> filter(genderF == 1) |> summarise(n = n()) |>
unlist()
sample.by.gender.K <- vd0 |> filter(genderF == 1) |> summarise(n = n()) |>
unlist() |> unname()
sample.by.gender.M <- vd0 |> filter(genderF == 0) |> summarise(n = n()) |>
unlist() |> unname()
osteoporosis.by.gender.K <- vd0.o <- vd0 |> filter (osteoporosis ==1) |>
group_by(gender) |> summarise(o = sum(osteoporosis)) |>
unlist() |> unname()
osteoporosis.by.gender.K <- vd0.o <- vd0 |> filter (osteoporosis ==1) |>
filter(genderF ==1) |> summarise(n =n()) |> unlist() |> unname()
osteoporosis.by.gender.M <- vd0.o <- vd0 |> filter (osteoporosis ==0) |>
filter(genderF ==1) |> summarise(n =n()) |> unlist() |> unname()
osteoporosis.by.gender.M <- vd0.o <- vd0 |> filter (osteoporosis ==1) |>
filter(genderF ==0) |> summarise(n =n()) |> unlist() |> unname()
library("tidyverse")
require('DescTools')
library("rstatix")
library("knitr")
library("ggpubr")
vd0 <- read.csv("vitD.csv", sep = ',', dec = ".",  header=T, na.string="NA" ) %>%
select(d=vitamin_D_level, age, gender, osteoporosis) %>%
mutate (genderF = recode(gender,
'1' = 1,
'2' = 0))
osteoporosis.by.gender.K <- vd0.o <- vd0 |> filter (osteoporosis ==1) |>
filter(genderF ==1) |> summarise(n =n()) |> unlist() |> unname()
sample.by.gender.M <- vd0 |> filter(genderF == 0) |> summarise(n = n()) |>
unlist() |> unname()
osteoporosis.by.gender.K <- vd0.o <- vd0 |> filter (osteoporosis ==1) |>
filter(genderF ==1) |> summarise(n =n()) |> unlist() |> unname()
osteoporosis.by.gender.M <- vd0.o <- vd0 |> filter (osteoporosis ==1) |>
filter(genderF ==0) |> summarise(n =n()) |> unlist() |> unname()
można opisać następującym równaniem regresji:
można opisać następującym równaniem regresji:
glm.2 = glm(osteoporosis ~ d + age + genderF, data = vd0, family = "binomial")
## oryginalne wartości współczynników
gml.2.coef <- as.data.frame(coef(summary(glm.2)))
## OR
glm.2.or <- round(exp(coef(glm.2)), 2)
## Przedziały ufności
glm.2.ci <- round(exp(confint(glm.2)), 2)
##glm_ci_txt <- sprintf ("%.3f %.3f", glm.2.ci[,1], glm.2.ci[,2] )
glm_ci_txt <- sprintf ("%s %s", format(glm.2.ci[,1], decimal.mark=",", digits=3), format(glm.2.ci[,2], decimal.mark=",", digits=3) )
## zestawienie tabelaryczne wyników
gml.2.coef.df <- tibble::rownames_to_column(gml.2.coef, "Parametr") %>%
mutate(or=glm.2.or,
ci=glm_ci_txt)
kable(gml.2.coef.df, row.names = F, digits=3,
col.names = c('Parametr', 'Ocena', 'SE', 'z', 'p', 'OR', 'CI'), booktabs = TRUE )
##Macierz pomyłek (*confussion matrix*):
##
## Prawdopodobieństwa
##
## Predykcja
pred.2 = predict(glm.2, type = "response")
y.pred.2 = ifelse(pred.2 < 0.7, 0, 1)
table <- table(y.pred.2, vd0$osteoporosis)
dimnames(table) <- list(
'Prognoza' = c("0", "1"),
'Osteoporoza' = c("0", "1")
)
table
##Macierz pomyłek (*confussion matrix*):
##
## Prawdopodobieństwa
##
## Predykcja
pred.2 = predict(glm.2, type = "response")
y.pred.2 = ifelse(pred.2 < 0.9, 0, 1)
table <- table(y.pred.2, vd0$osteoporosis)
dimnames(table) <- list(
'Prognoza' = c("0", "1"),
'Osteoporoza' = c("0", "1")
)
table
czulosc <- table[4] / (table[3]+table[4])
czulosc <- table[4] / (table[3]+table[4])
swoistosc <- table[1] / (table[1]+table[2])
table <- table(y.pred.2, vd0$osteoporosis)
table
y.pred.2 = ifelse(pred.2 < 0.8, 0, 1)
table <- table(y.pred.2, vd0$osteoporosis)
table
y.pred.2 = ifelse(pred.2 < 0.9, 0, 1)
table <- table(y.pred.2, vd0$osteoporosis)
dimnames(table) <- list(
'Prognoza' = c("0", "1"),
'Osteoporoza' = c("0", "1")
)
table
y.pred.2 = ifelse(pred.2 < 0.9, 0, 1)
table <- table(y.pred.2, vd0$osteoporosis)
dimnames(table) <- list(
'Prognoza' = c("0", "1"),
'Osteoporoza' = c("0", "1")
)
##Macierz pomyłek (*confussion matrix*):
##
## Prawdopodobieństwa
##
## Predykcja
pred.2 = predict(glm.2, type = "response")
y.pred.2 = ifelse(pred.2 < 0.9, 0, 1)
table <- table(y.pred.2, vd0$osteoporosis)
dimnames(table) <- list(
'Prognoza' = c("0", "1"),
'Osteoporoza' = c("0", "1")
)
##Macierz pomyłek (*confussion matrix*):
##
## Prawdopodobieństwa
##
## Predykcja
pred.2 = predict(glm.2, type = "response")
y.pred.2 = ifelse(pred.2 < 0.9, 0, 1)
table.xx <- table(y.pred.2, vd0$osteoporosis)
dimnames(table.xx) <- list(
'Prognoza' = c("0", "1"),
'Osteoporoza' = c("0", "1")
)
##Macierz pomyłek (*confussion matrix*):
##
## Prawdopodobieństwa
##
## Predykcja
pred.2 = predict(glm.2, type = "response")
y.pred.2 = ifelse(pred.2 < 0.7, 0, 1)
table.xx <- table(y.pred.2, vd0$osteoporosis)
dimnames(table.xx) <- list(
'Prognoza' = c("0", "1"),
'Osteoporoza' = c("0", "1")
)
table.xx
y.pred.2 = ifelse(pred.2 < 0.9, 0, 1)
table.xx <- table(y.pred.2, vd0$osteoporosis)
dimnames(table.xx) <- list(
'Prognoza' = c("0", "1"),
'Osteoporoza' = c("0", "1")
)
table.xx <- table(y.pred.2, vd0$osteoporosis)
table.xx
y.pred.2 = ifelse(pred.2 < 0.7, 0, 1)
table.xx <- table(y.pred.2, vd0$osteoporosis)
table.xx
## https://practical-stats-med-r.netlify.app/wmw_test
## Practical Statistics in Medicine with R
library("tidyverse")
require('DescTools')
library("rstatix")
library("knitr")
library("ggpubr")
vd0 <- read.csv("vitD.csv", sep = ',', dec = ".",  header=T, na.string="NA" ) %>%
select(d=vitamin_D_level, age, gender, osteoporosis) %>%
mutate (genderF = recode(gender,
'1' = 1,
'2' = 0))
sample.size=nrow(vd0)
sample.size
sample.by.gender.K <- vd0 |> filter(genderF == 1) |> summarise(n = n()) |>
unlist() |> unname()
sample.by.gender.M <- vd0 |> filter(genderF == 0) |> summarise(n = n()) |>
unlist() |> unname()
osteoporosis.by.gender.K <- vd0.o <- vd0 |> filter (osteoporosis ==1) |>
filter(genderF ==1) |> summarise(n =n()) |> unlist() |> unname()
osteoporosis.by.gender.M <- vd0.o <- vd0 |> filter (osteoporosis ==1) |>
filter(genderF ==0) |> summarise(n =n()) |> unlist() |> unname()
sum(vd0$osteoporosis)
glm.2 = glm(osteoporosis ~ d + age + genderF, data = vd0, family = "binomial")
## oryginalne wartości współczynników
gml.2.coef <- as.data.frame(coef(summary(glm.2)))
## OR
glm.2.or <- round(exp(coef(glm.2)), 2)
## Przedziały ufności
glm.2.ci <- round(exp(confint(glm.2)), 2)
##glm_ci_txt <- sprintf ("%.3f %.3f", glm.2.ci[,1], glm.2.ci[,2] )
glm_ci_txt <- sprintf ("%s %s", format(glm.2.ci[,1], decimal.mark=",", digits=3), format(glm.2.ci[,2], decimal.mark=",", digits=3) )
## zestawienie tabelaryczne wyników
gml.2.coef.df <- tibble::rownames_to_column(gml.2.coef, "Parametr") %>%
mutate(or=glm.2.or,
ci=glm_ci_txt)
kable(gml.2.coef.df, row.names = F, digits=3,
col.names = c('Parametr', 'Ocena', 'SE', 'z', 'p', 'OR', 'CI'), booktabs = TRUE )
##Macierz pomyłek (*confussion matrix*):
##
## Prawdopodobieństwa
##
## Predykcja
pred.2 = predict(glm.2, type = "response")
y.pred.2 = ifelse(pred.2 < 0.7, 0, 1)
table.xx <- table(y.pred.2, vd0$osteoporosis)
dimnames(table.xx) <- list(
'Prognoza' = c("0", "1"),
'Osteoporoza' = c("0", "1")
)
table.xx
czulosc <- table[4] / (table[3]+table[4])
swoistosc <- table[1] / (table[1]+table[2])
Stąd: czułość `r czulosc`; swoistość `r swoistosc`.
pchisq.glm.2 <- pchisq(glm.2$null.deviance -  glm.2$deviance, glm.2$df.null - glm.2$df.residual, lower.tail = F)
roc_obj <- roc(vd0$osteoporosis, pred.2, legacy.axes = T)
##plot(roc_obj, main = "ROC Curve for the Logistic Regression Model", legacy.axes = T)
auc<- auc_value <- auc(roc_obj)
roc_obj <- roc(vd0$osteoporosis, pred.2, legacy.axes = T)
library ("pROC")
roc_obj <- roc(vd0$osteoporosis, pred.2, legacy.axes = T)
##plot(roc_obj, main = "ROC Curve for the Logistic Regression Model", legacy.axes = T)
auc<- auc_value <- auc(roc_obj)
roc_obj$thresholds
libabry("nagelkerke")
librabry("nagelkerke")
install.packages("nagelkerke")
librabry("nagelkerke")
librabry("sjSDM")
install.packages("sjSDM")
library("tidyverse")
require('DescTools')
library("rstatix")
library("knitr")
library("ggpubr")
library ("pROC")
require("DescTools")
###
vd0 <- read.csv("vitD.csv", sep = ',', dec = ".",  header=T, na.string="NA" ) %>%
select(d=vitamin_D_level, age, gender, osteoporosis) %>%
mutate (genderF = recode(gender,
'1' = 1,
'2' = 0))
sample.size=nrow(vd0)
sample.size
sample.by.gender.K <- vd0 |> filter(genderF == 1) |> summarise(n = n()) |>
unlist() |> unname()
sample.by.gender.M <- vd0 |> filter(genderF == 0) |> summarise(n = n()) |>
unlist() |> unname()
osteoporosis.by.gender.K <- vd0.o <- vd0 |> filter (osteoporosis ==1) |>
filter(genderF ==1) |> summarise(n =n()) |> unlist() |> unname()
osteoporosis.by.gender.M <- vd0.o <- vd0 |> filter (osteoporosis ==1) |>
filter(genderF ==0) |> summarise(n =n()) |> unlist() |> unname()
sum(vd0$osteoporosis)
## 26 przypadków osteoporozy
## 21 K; 5 M
vd0.o <- vd0 |> filter (osteoporosis ==1) |>
group_by(gender) |> summarise(o = sum(osteoporosis))
## Najpierw Model zerowy
glm.0 = glm(osteoporosis ~ NULL, data = vd0, family = "binomial")
summary(glm.1)
summary(glm.1)
print(summary(glm.1), show.residuals = TRUE)
PseudoR2(glm.1, which='McFadden')
PseudoR2(glm.1, which='Nagelkerke')
