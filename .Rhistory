across(c('zzp1', 'zzp2', 'zzp3', 'sp1', 'sp2', 'sp3'
), ~ case_when(
. == "Zdecydowanie się nie zgadzam" ~ 1,
. == "Nie zgadzam się" ~ 2,
. == "Trudno powiedzieć" ~ 3,
. == "Zgadzam się" ~ 4,
. == "Zdecydowanie się zgadzam" ~ 5
)),
###
### Zdecydowanie niesatysfakcjonująca-Niesatysfakcjonująca-TP-Satysfakcjonująca-Zdecydowanie niesatysfakcjonująca
across(c('sw1', 'sw2', 'sw3', 'sw4',
), ~ case_when(
#Zdecydowanie niesatysfakcjonująca-Niesatysfakcjonująca-TP-Satysfakcjonująca-Zdecydowanie satysfakcjonująca
. == "zdecydowanie niesatysfakcjonująca" ~ 1,
. == "zdecydowanie niesatysfakcjonujący" ~ 1,
. == "zdecydowanie niesatysfakcjonujące" ~ 1,
. == "niesatysfakcjonująca" ~ 2,
. == "niesatysfakcjonujący" ~ 2,
. == "niesatysfakcjonujące" ~ 2,
. == "trudno powiedzieć" ~ 3,
. == "satysfakcjonująca" ~ 4,
. == "satysfakcjonujący" ~ 4,
. == "satysfakcjonujące" ~ 4,
. == "zdecydowanie satysfakcjonująca" ~ 5,
. == "zdecydowanie satysfakcjonujący" ~ 5
. == "zdecydowanie satysfakcjonujące" ~ 5
d1 <- d0 %>%
mutate(
ssp1 = tolower(ssp1),
ssp2 = tolower(ssp2),
ssp3 = tolower(ssp3),
ssp4 = tolower(ssp4),
ssp5 = tolower(ssp5),
sw1 = tolower(sw1),
sw2 = tolower(sw2),
sw3 = tolower(sw3),
sw4 = tolower(sw4)
) %>%
mutate(
##zdecydowanie się nie zgadzam
##nie zgadzam się
##raczej się nie zgadzam
##trudno powiedzieć
##raczej się zgadzam
##zgadzam się
##zdecydowanie się zgadzam
across(c("po1", "po2", 'po3', 'po4', 'po5', 'po6', 'po7',
'po8', 'po9', "po10", "po11", 'po12', 'po13', 'po14', 'po15', 'po16', 'po17', 'po18'
), ~ case_when(
. == "zdecydowanie się nie zgadzam" ~ 1,
. == "nie zgadzam się" ~ 2,
. == "raczej się nie zgadzam"  ~ 3,
. == "trudno powiedzieć"  ~ 4,
. == "raczej się zgadzam"  ~ 5,
. == "zgadzam się" ~ 6,
. == "zdecydowanie się zgadzam" ~ 7
)),
###
###
across(c('ssp1', 'ssp2', 'ssp3', "ssp4", 'ssp5'
), ~ case_when(
. == "zdecydowanie się nie zgadzam" ~ 1,
. == "nie zgadzam się" ~ 2,
. == "raczej się nie zgadzam"  ~ 3,
. == "trudno powiedzieć"  ~ 4,
. == "raczej się zgadzam"  ~ 5,
. == "zgadzam się" ~ 6,
. == "zdecydowanie się zgadzam" ~ 7,
.default = -1
)),
###
### Zdecydowanie się nie zgadzam/Nie zgadzam się/Trudno powiedzieć/Zgadzam się/Zdecydowanie się zgadzam
across(c('zzp1', 'zzp2', 'zzp3', 'sp1', 'sp2', 'sp3'
), ~ case_when(
. == "Zdecydowanie się nie zgadzam" ~ 1,
. == "Nie zgadzam się" ~ 2,
. == "Trudno powiedzieć" ~ 3,
. == "Zgadzam się" ~ 4,
. == "Zdecydowanie się zgadzam" ~ 5
)),
###
### Zdecydowanie niesatysfakcjonująca-Niesatysfakcjonująca-TP-Satysfakcjonująca-Zdecydowanie niesatysfakcjonująca
across(c('sw1', 'sw2', 'sw3', 'sw4',
), ~ case_when(
#Zdecydowanie niesatysfakcjonująca-Niesatysfakcjonująca-TP-Satysfakcjonująca-Zdecydowanie satysfakcjonująca
. == "zdecydowanie niesatysfakcjonująca" ~ 1,
. == "zdecydowanie niesatysfakcjonujący" ~ 1,
. == "zdecydowanie niesatysfakcjonujące" ~ 1,
. == "niesatysfakcjonująca" ~ 2,
. == "niesatysfakcjonujący" ~ 2,
. == "niesatysfakcjonujące" ~ 2,
. == "trudno powiedzieć" ~ 3,
. == "satysfakcjonująca" ~ 4,
. == "satysfakcjonujący" ~ 4,
. == "satysfakcjonujące" ~ 4,
. == "zdecydowanie satysfakcjonująca" ~ 5,
. == "zdecydowanie satysfakcjonujący" ~ 5,
. == "zdecydowanie satysfakcjonujące" ~ 5
)),
### raz na miesiąc lub mniej/1--2 razy w miesiącu/1--2 razy w tygodniu/1--2 razy dziennie/wiele razy dziennie
across(c('kpw1', 'kpp1', 'kpw2', 'kpp2', 'kpw3', 'kpp3', 'kpw4', 'kpp4',
), ~ case_when(
#
. == "raz na miesiąc lub mniej" ~ 1,
. == "1--2 razy w miesiącu" ~ 2,
. == "1--2 razy w tygodniu" ~ 3,
. == "1--2 razy dziennie" ~ 4,
. == "wiele razy dziennie" ~ 5
)),
## SP0 = Bardzo niezadowolony/Niezadowolony/Trudno powiedzieć/Zadowolony/Bardzo zadowolony
## ZZP0 = Nigdy/Rzadko/Czasami/Często/Bardzo często
across(c('sp0'
), ~ case_when(
#
. == "Bardzo niezadowolony" ~ 1,
. == "Niezadowolony" ~ 2,
. == "Trudno powiedzieć" ~ 3,
. == "Zadowolony" ~ 4,
. == "Bardzo Zadowolony" ~ 5
)),
across(c('zzp0'
), ~ case_when(
#
. == "Nigdy" ~ 1,
. == "Rzadko" ~ 2,
. == "Czasami" ~ 3,
. == "Często" ~ 4,
. == "Bardzo często" ~ 5
)) ) %>%
mutate (
zzp = zzp1 + zzp2 +zzp3,
sp = sp1+ sp2 + sp3,
ssp = ssp1 + ssp2 + ssp3 + ssp4 + ssp5,
sw =  sw1 + sw2 + sw3 + sw4,
##zzp0, sw2,
kpw = kpw1 + kpw2 + kpw3 + kpw4,
kpp = kpp1 + kpp2 + kpp3 + kpp4,
poA = po1 + po2 + po3 + po4 + po5 + po6,
poN = po7 + po8 + po9 + po10 + po11 + po12,
poT = po13 + po14 + po15 + po16 + po17 + po18,
##plec, kierunek, staz, zmiana, roddzial
po = poA + poN + poT
) %>%
#select (zzp, sp, ssp, sw, kpw, kpp, poA, poN, poT, po,
#  plec, staz, kierunek, zmiana, roddzial ) %>%
mutate( staz.klasa =case_when(staz >= 10 ~ "d",  staz >= 3 ~ "s",
TRUE ~ "m") )
d1 <- d0 %>%
mutate(
ssp1 = tolower(ssp1),
ssp2 = tolower(ssp2),
ssp3 = tolower(ssp3),
ssp4 = tolower(ssp4),
ssp5 = tolower(ssp5),
sw1 = tolower(sw1),
sw2 = tolower(sw2),
sw3 = tolower(sw3),
sw4 = tolower(sw4)
) %>%
mutate(
##zdecydowanie się nie zgadzam
##nie zgadzam się
##raczej się nie zgadzam
##trudno powiedzieć
##raczej się zgadzam
##zgadzam się
##zdecydowanie się zgadzam
across(c("po1", "po2", 'po3', 'po4', 'po5', 'po6', 'po7',
'po8', 'po9', "po10", "po11", 'po12', 'po13', 'po14', 'po15', 'po16', 'po17', 'po18'
), ~ case_when(
. == "zdecydowanie się nie zgadzam" ~ 1,
. == "nie zgadzam się" ~ 2,
. == "raczej się nie zgadzam"  ~ 3,
. == "trudno powiedzieć"  ~ 4,
. == "raczej się zgadzam"  ~ 5,
. == "zgadzam się" ~ 6,
. == "zdecydowanie się zgadzam" ~ 7
)),
###
###
across(c('ssp1', 'ssp2', 'ssp3', "ssp4", 'ssp5'
), ~ case_when(
. == "zdecydowanie się nie zgadzam" ~ 1,
. == "nie zgadzam się" ~ 2,
. == "raczej się nie zgadzam"  ~ 3,
. == "trudno powiedzieć"  ~ 4,
. == "raczej się zgadzam"  ~ 5,
. == "zgadzam się" ~ 6,
. == "zdecydowanie się zgadzam" ~ 7,
.default = -1
)),
###
### Zdecydowanie się nie zgadzam/Nie zgadzam się/Trudno powiedzieć/Zgadzam się/Zdecydowanie się zgadzam
across(c('zzp1', 'zzp2', 'zzp3', 'sp1', 'sp2', 'sp3'
), ~ case_when(
. == "Zdecydowanie się nie zgadzam" ~ 1,
. == "Nie zgadzam się" ~ 2,
. == "Trudno powiedzieć" ~ 3,
. == "Zgadzam się" ~ 4,
. == "Zdecydowanie się zgadzam" ~ 5
)),
###
### Zdecydowanie niesatysfakcjonująca-Niesatysfakcjonująca-TP-Satysfakcjonująca-Zdecydowanie niesatysfakcjonująca
across(c('sw1', 'sw2', 'sw3', 'sw4',
), ~ case_when(
#Zdecydowanie niesatysfakcjonująca-Niesatysfakcjonująca-TP-Satysfakcjonująca-Zdecydowanie satysfakcjonująca
. == "zdecydowanie niesatysfakcjonująca" ~ 1,
. == "zdecydowanie niesatysfakcjonujący" ~ 1,
. == "zdecydowanie niesatysfakcjonujące" ~ 1,
. == "niesatysfakcjonująca" ~ 2,
. == "niesatysfakcjonujący" ~ 2,
. == "niesatysfakcjonujące" ~ 2,
. == "trudno powiedzieć" ~ 3,
. == "satysfakcjonująca" ~ 4,
. == "satysfakcjonujący" ~ 4,
. == "satysfakcjonujące" ~ 4,
. == "zdecydowanie satysfakcjonująca" ~ 5,
. == "zdecydowanie satysfakcjonujący" ~ 5,
. == "zdecydowanie satysfakcjonujące" ~ 5
)),
### raz na miesiąc lub mniej/1--2 razy w miesiącu/1--2 razy w tygodniu/1--2 razy dziennie/wiele razy dziennie
across(c('kpw1', 'kpp1', 'kpw2', 'kpp2', 'kpw3', 'kpp3', 'kpw4', 'kpp4',
), ~ case_when(
#
. == "raz na miesiąc lub mniej" ~ 1,
. == "1--2 razy w miesiącu" ~ 2,
. == "1--2 razy w tygodniu" ~ 3,
. == "1--2 razy dziennie" ~ 4,
. == "wiele razy dziennie" ~ 5
)),
## SP0 = Bardzo niezadowolony/Niezadowolony/Trudno powiedzieć/Zadowolony/Bardzo zadowolony
## ZZP0 = Nigdy/Rzadko/Czasami/Często/Bardzo często
across(c('sp0'
), ~ case_when(
#
. == "Bardzo niezadowolony" ~ 1,
. == "Niezadowolony" ~ 2,
. == "Trudno powiedzieć" ~ 3,
. == "Zadowolony" ~ 4,
. == "Bardzo zadowolony" ~ 5
)),
across(c('zzp0'
), ~ case_when(
#
. == "Nigdy" ~ 1,
. == "Rzadko" ~ 2,
. == "Czasami" ~ 3,
. == "Często" ~ 4,
. == "Bardzo często" ~ 5
)) ) %>%
mutate (
zzp = zzp1 + zzp2 +zzp3,
sp = sp1+ sp2 + sp3,
ssp = ssp1 + ssp2 + ssp3 + ssp4 + ssp5,
sw =  sw1 + sw2 + sw3 + sw4,
##zzp0, sw2,
kpw = kpw1 + kpw2 + kpw3 + kpw4,
kpp = kpp1 + kpp2 + kpp3 + kpp4,
poA = po1 + po2 + po3 + po4 + po5 + po6,
poN = po7 + po8 + po9 + po10 + po11 + po12,
poT = po13 + po14 + po15 + po16 + po17 + po18,
##plec, kierunek, staz, zmiana, roddzial
po = poA + poN + poT
) %>%
#select (zzp, sp, ssp, sw, kpw, kpp, poA, poN, poT, po,
#  plec, staz, kierunek, zmiana, roddzial ) %>%
mutate( staz.klasa =case_when(staz >= 10 ~ "d",  staz >= 3 ~ "s",
TRUE ~ "m") )
d1 <- d0 %>%
## Lekkin chaos trzeba sprowadzić do wspólnego mianownika:
mutate(
ssp1 = tolower(ssp1), ssp2 = tolower(ssp2), ssp3 = tolower(ssp3),
ssp4 = tolower(ssp4), ssp5 = tolower(ssp5),
sw1 = tolower(sw1), sw2 = tolower(sw2),  sw3 = tolower(sw3), sw4 = tolower(sw4)
) %>%
mutate(
across(c("po1", "po2", 'po3', 'po4', 'po5', 'po6', 'po7',
'po8', 'po9', "po10", "po11", 'po12', 'po13', 'po14', 'po15', 'po16', 'po17', 'po18'
), ~ case_when(
. == "zdecydowanie się nie zgadzam" ~ 1,
. == "nie zgadzam się" ~ 2,
. == "raczej się nie zgadzam"  ~ 3,
. == "trudno powiedzieć"  ~ 4,
. == "raczej się zgadzam"  ~ 5,
. == "zgadzam się" ~ 6,
. == "zdecydowanie się zgadzam" ~ 7
)),
###
across(c('ssp1', 'ssp2', 'ssp3', "ssp4", 'ssp5'
), ~ case_when(
. == "zdecydowanie się nie zgadzam" ~ 1,
. == "nie zgadzam się" ~ 2,
. == "raczej się nie zgadzam"  ~ 3,
. == "trudno powiedzieć"  ~ 4,
. == "raczej się zgadzam"  ~ 5,
. == "zgadzam się" ~ 6,
. == "zdecydowanie się zgadzam" ~ 7,
.default = -1
)),
###
### Zdecydowanie się nie zgadzam/Nie zgadzam się/Trudno powiedzieć/Zgadzam się/Zdecydowanie się zgadzam
across(c('zzp1', 'zzp2', 'zzp3', 'sp1', 'sp2', 'sp3'
), ~ case_when(
. == "Zdecydowanie się nie zgadzam" ~ 1,
. == "Nie zgadzam się" ~ 2,
. == "Trudno powiedzieć" ~ 3,
. == "Zgadzam się" ~ 4,
. == "Zdecydowanie się zgadzam" ~ 5
)),
###
### Zdecydowanie niesatysfakcjonująca-Niesatysfakcjonująca-TP-Satysfakcjonująca-Zdecydowanie niesatysfakcjonująca
across(c('sw1', 'sw2', 'sw3', 'sw4',
), ~ case_when(
#Zdecydowanie niesatysfakcjonująca-Niesatysfakcjonująca-TP-Satysfakcjonująca-Zdecydowanie satysfakcjonująca
. == "zdecydowanie niesatysfakcjonująca" ~ 1,
. == "zdecydowanie niesatysfakcjonujący" ~ 1,
. == "zdecydowanie niesatysfakcjonujące" ~ 1,
. == "niesatysfakcjonująca" ~ 2,
. == "niesatysfakcjonujący" ~ 2,
. == "niesatysfakcjonujące" ~ 2,
. == "trudno powiedzieć" ~ 3,
. == "satysfakcjonująca" ~ 4,
. == "satysfakcjonujący" ~ 4,
. == "satysfakcjonujące" ~ 4,
. == "zdecydowanie satysfakcjonująca" ~ 5,
. == "zdecydowanie satysfakcjonujący" ~ 5,
. == "zdecydowanie satysfakcjonujące" ~ 5
)),
### raz na miesiąc lub mniej/1--2 razy w miesiącu/1--2 razy w tygodniu/1--2 razy dziennie/wiele razy dziennie
across(c('kpw1', 'kpp1', 'kpw2', 'kpp2', 'kpw3', 'kpp3', 'kpw4', 'kpp4',
), ~ case_when(
#
. == "raz na miesiąc lub mniej" ~ 1,
. == "1--2 razy w miesiącu" ~ 2,
. == "1--2 razy w tygodniu" ~ 3,
. == "1--2 razy dziennie" ~ 4,
. == "wiele razy dziennie" ~ 5
)),
## SP0 = Bardzo niezadowolony/Niezadowolony/Trudno powiedzieć/Zadowolony/Bardzo zadowolony
## ZZP0 = Nigdy/Rzadko/Czasami/Często/Bardzo często
across(c('sp0'
), ~ case_when(
#
. == "Bardzo niezadowolony" ~ 1,
. == "Niezadowolony" ~ 2,
. == "Trudno powiedzieć" ~ 3,
. == "Zadowolony" ~ 4,
. == "Bardzo zadowolony" ~ 5
)),
across(c('zzp0'
), ~ case_when(
#
. == "Nigdy" ~ 1,
. == "Rzadko" ~ 2,
. == "Czasami" ~ 3,
. == "Często" ~ 4,
. == "Bardzo często" ~ 5
)) ) %>%
mutate (
zzp = zzp1 + zzp2 +zzp3,
sp = sp1+ sp2 + sp3,
ssp = ssp1 + ssp2 + ssp3 + ssp4 + ssp5,
sw =  sw1 + sw2 + sw3 + sw4,
##zzp0, sw2,
kpw = kpw1 + kpw2 + kpw3 + kpw4,
kpp = kpp1 + kpp2 + kpp3 + kpp4,
poA = po1 + po2 + po3 + po4 + po5 + po6,
poN = po7 + po8 + po9 + po10 + po11 + po12,
poT = po13 + po14 + po15 + po16 + po17 + po18,
##plec, kierunek, staz, zmiana, roddzial
po = poA + poN + poT
) %>%
select (zzp, sp, ssp, sw, kpw, kpp, poA, poN, poT, po,
plec, staz, kierunek, zmiana, roddzial ) %>%
mutate( staz.klasa =case_when(staz >= 10 ~ "d",  staz >= 3 ~ "s",
TRUE ~ "m") )
View(d1)
write.table(d1, sep = ";", "satisfaction_intention_commitment_PSW.csv")
d1 %>% select (zzp, sp, ssp, sw, kpw, kpp, poA, poN, poT, po, staz) %>%
na.omit() %>% cor(use = "complete.obs")
lm(d1, zzp ~ sp)
lm(data=d1, zzp ~ sp)
summary(lm1)
lm1 <- lm(data=d1, zzp ~ sp)
summary(lm1)
lm1 <- lm(data=d1, zzp ~ sp + po)
summary(lm1)
lm1 <- lm(data=d1, zzp ~ sp + kpw)
lm1 <- lm(data=d1, zzp ~ sp + kpw)
summary(lm1)
lm1 <- lm(data=d1, zzp ~ sp + kpw + kpp)
summary(lm1)
lm1 <- lm(data=d1, zzp ~ sp + kpw + kpp + sw)
summary(lm1)
lm1 <- lm(data=d1, zzp ~ sp + kpw + sw)
summary(lm1)
lm1 <- lm(data=d1, zzp ~ sp + kpw + staz)
summary(lm1)
summary(d1)
d1 %>% filter(zzp >= 10)
odejda <- d1 %>% filter(zzp >= 10)
nrow(odejda)
odejda <- d1 %>% filter(zzp >= 12)
nrow(odejda)
## wartości >= 10 = pewna zmiana
lm1 <- lm(data=d1, zzp ~ sp + kpw + staz + plec)
summary(lm1)
## wartości >= 10 = pewna zmiana
lm1 <- lm(data=d1, zzp ~ sp + kpw + staz + roddzial)
summary(lm1)
## wartości >= 10 = pewna zmiana
lm1 <- lm(data=d1, zzp ~ sp + kpw + staz + zmiana)
summary(lm1)
## wartości >= 10 = pewna zmiana
lm1 <- lm(data=d1, zzp ~ sp + kpw )
summary(lm1)
## Macierz korelacji
d1 %>% select (zzp, sp, ssp, sw, kpw, kpp, poA, poN, poT, po, staz) %>%
na.omit() %>% cor(use = "complete.obs")
## Macierz korelacji
d1 %>% select (zzp, sp, sw, kpw, kpp, po, staz) %>%
na.omit() %>% cor(use = "complete.obs")
summary(d1)
## Macierz korelacji
d1 %>% select (zzp, sp, sw, kpw, kpp, po, staz) %>%
na.omit() %>% cor(use = "complete.obs")
## sprawdź
e0 <- read.csv("satisfaction_intention_commitment_PSW.csv",  sep = ';',  dec = ".", header=T, na.string="NA")
View(e0)
## wartości >= 10 = pewna zmiana
lm1 <- lm(data=d1, zzp ~ sp + sw + kpw + kpp + po + staz + plec + roddzial)
summary(lm1)
lm2 <- lm(data=d1, zzp ~ sp + sw + kpw + po + staz + plec + roddzial)
summary(lm1)
lm2 <- lm(data=d1, zzp ~ sp + sw + kpw + po + staz + plec + roddzial)
summary(lm2)
lm3 <- lm(data=d1, zzp ~ sp + sw + kpw + po + staz + roddzial)
summary(lm3)
lm4 <- lm(data=d1, zzp ~ sp + sw + kpw + po + staz + roddzial)
summary(lm4)
lm4 <- lm(data=d1, zzp ~ sp + sw + kpw + po + roddzial)
summary(lm4)
lm5 <- lm(data=d1, zzp ~ sp  + kpw + po + roddzial)
summary(lm5)
lm6 <- lm(data=d1, zzp ~ sp  + kpw + po)
summary(lm6)
lm6 <- lm(data=d1, zzp ~ sp  + kpw + po)
summary(lm6)
## Macierz korelacji
d1 %>% select (zzp, sp, sw, kpw, kpp, po, staz) %>%
na.omit() %>% cor(use = "complete.obs")
lm7 <- lm(data=d1, zzp ~ sp  + kpw )
summary(lm7)
lm9 <- lm(data=d1, zzp ~ po )
summary(lm9)
e1 <- e0  %>%
mutate (zp = zzp)
e1 <- e0  %>%
mutate (zp=case_when(zzp < 12 ~ "Z",  TRUE ~ "O"))
View(e1)
glm.1 = glm(zp ~ sp + kpw, data = e1, family = "binomial")
e1 <- e0  %>%
mutate (zp=case_when(zzp < 12 ~ "1",  TRUE ~ "0"))
glm.1 = glm(zp ~ sp + kpw, data = e1, family = "binomial")
e1 <- e0  %>%
mutate (zp=case_when(zzp < 12 ~ 1,  TRUE ~ 0))
glm.1 = glm(zp ~ sp + kpw, data = e1, family = "binomial")
summary(glm.1)
glm.1 = glm(zp ~ sp , data = e1, family = "binomial")
summary(glm.2)
glm.1 <- glm(zp ~ sp + kpw, data = e1, family = "binomial")
summary(glm.1)
glm.2 <- glm(zp ~ sp , data = e1, family = "binomial")
summary(glm.2)
gml.2.coef <- as.data.frame(coef(summary(glm.2)))
## OR
glm.2.or <- round(exp(coef(glm.2)), 2)
glm_or_txt <- sprintf ("%.3f", glm.2.or )
## Przedziały ufności
glm.2.ci <- round(exp(confint(glm.2)), 2)
glm_ci_txt <- sprintf ("%.3f %.3f", glm.2.ci[,1], glm.2.ci[,2] )
## zestawienie tabelaryczne wyników
gml.2.coef.df <- tibble::rownames_to_column(gml.2.coef, "Parametr") %>%
mutate(or=glm_or_txt,  ci=glm_ci_txt)
kable(gml.2.coef.df, row.names = F, digits=3,
col.names = c('Parametr', 'Ocena', 'Błąd stand', 'z', 'p', 'OR', 'CI') )
library("knitr")
kable(gml.2.coef.df, row.names = F, digits=3,
col.names = c('Parametr', 'Ocena', 'Błąd stand', 'z', 'p', 'OR', 'CI') )
pred.2 = predict(glm.2, type = "response")
y.pred.2 = ifelse(pred.2 < 0.5, 0, 1)
table <- table(y.pred.2, e0$zp)
table <- table(y.pred.2, e1$zp)
dimnames(table) <- list(
'Prognoza' = c("0", "1"),
'zp' = c("0", "1")
)
table
czulosc <- table[4] / (table[3]+table[4])
swoistosc <- table[1] / (table[1]+table[2])
roc_obj <- roc(e1$zp, pred.2, legacy.axes = T)
library("pROC")
roc_obj <- roc(e1$zp, pred.2, legacy.axes = T)
##plot(roc_obj, main = "ROC Curve for the Logistic Regression Model", legacy.axes = T)
auc<- auc_value <- auc(roc_obj)
ggroc(roc_obj,
legacy.axes = T,
colour = 'steelblue', size = 2) +
geom_abline(intercept = 0, slope = 1) +
ggtitle(paste0('ROC Curve ', '(AUC = ', auc, ')'))
kable(gml.2.coef.df, row.names = F, digits=3,
col.names = c('Parametr', 'Ocena', 'Błąd stand', 'z', 'p', 'OR', 'CI') )
